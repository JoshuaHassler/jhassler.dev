{"version":3,"sources":["pallet.js","Theme.js","NavBar.js","HomeCard.js","BaseStyle.js","AboutCard.js","ExperienceListings.js","Experience.js","ContactCard.js","Resume.js","App.js","serviceWorker.js","index.js"],"names":["pink","gpink","A400","blue","gblue","white","ggrey","createMuiTheme","typography","useNextVariants","palette","primary","main","secondary","type","NavBar","state","drawerOpen","section","toggleDrawer","open","_this","setState","setSection","val","cb","scrollToElement","el","scroller","scrollTo","spy","smooth","offset","duration","_this2","this","classes","props","_this$state","sectionHdr","sideBar","react_default","a","createElement","className","list","List_default","ListItem_default","button","key","onClick","ListItemIcon_default","AccountCircle_default","ListItemText_default","Work_default","Note_default","Email_default","AppBar_default","position","Toolbar_default","IconButton_default","aria-owns","aria-haspopup","Menu_default","Typography_default","variant","color","Drawer_default","id","onClose","tabIndex","role","React","Component","withStyles","width","IndexCard","spacer","Card_default","card","overlay","modules","to","Button_default","theme","height","display","justifyContent","alignItems","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","backgroundAttachment","backgroundColor","border","borderRadius","top","left","transform","zIndex","padding","textAlign","styles","rootGrid","maxWidth","margin","flexGrow","titleCard","marginLeft","marginRight","title","fontSize","content","alignTextWithIcon","contactLinks","&:hover","textContainer","AboutCard","Object","classCallCheck","_super","call","inview","name","CardContent_default","gutterBottom","component","lorum","ExperienceListings","description","image","keywords","itemStyle","cardBody","cardMedia","cardAction","cardButton","spacing","unit","display1","expContainer","search","searchInput","&$cssFocused","light","cssOutlinedInput","&$cssFocused $notchedOutline","borderColor","cssFocused","notchedOutline","Flip","Grid_default","container","justify","Cached_default","ExperienceItem","isFlipped","handleClick","bind","assertThisInitialized","e","preventDefault","currState","desc","react_card_flip_default","CardActionArea_default","CardMedia_default","substring","ExperienceCard","ExperienceList","_super2","experienceCards","expCards","nextProps","Fragment","map","item","Experiences","SearchBar","_this3","_super3","searchString","handleChange","target","value","_this4","TextField_default","label","onChange","evt","InputLabelProps","root","focused","InputProps","startAdornment","InputAdornment_default","Search_default","Search","Experience","_this5","_super4","handleSearch","ss","newCards","fuse","console","log","Fuse","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","_this6","xs","Link_default","Experience_Search","ContactCard","style","href","VpnKey_default","download","Phone_default","ResumeCard","cardRoot","resImage","info","textContent","propType","PropTypes","object","isRequired","flexDirection","flex","MuiThemeProvider_default","CssBaseline_default","src_NavBar","HomeCard","src_AboutCard","src_Experience","Resume","src_ContactCard","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAIaA,EAAOC,IAAMC,KACbC,EAAOC,IAAM,KACbC,EAAQC,IAAM,KCHZC,2BAAe,CAC1BC,WAAY,CACRC,iBAAiB,GAErBC,QAAS,CACLC,QAAS,CACLC,KAAMT,GAEVU,UAAW,CACPD,KAAMZ,GAEVc,KAAM,8uBCMd,IAMMC,sMACFC,MAAQ,CACJC,YAAY,EACZC,QAAS,UAGbC,aAAe,SAAAC,GACXC,EAAKC,SAAS,CACVL,WAAYG,OAIpBG,WAAa,SAACC,EAAKC,GACfJ,EAAKC,SAAS,CAAEJ,QAASM,GAAOC,MAGpCC,gBAAkB,SAAAC,GACdN,EAAKC,SAAS,CACVL,YAAY,GACbW,WAASC,SAAUF,EAAI,CACtBG,KAAK,EACLC,QAAQ,EACRC,QAAS,IACTC,SAAU,+DAIT,IAAAC,EAAAC,KACGC,EAAYD,KAAKE,MAAjBD,QADHE,EAE2BH,KAAKnB,MAA7BC,EAFHqB,EAEGrB,WAAYC,EAFfoB,EAEepB,QAChBqB,EAA0B,SAAZrB,EAAqB,GAAK,KAAOA,EAE7CsB,EACFC,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQS,MACpBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACID,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,IAAI,QAAQC,QAAU,kBAAMhB,EAAKR,gBAAiB,aAC/De,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OACdD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAc/B,QAAQ,cAE1B8B,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,IAAI,aAAaC,QAAU,kBAAMhB,EAAKR,gBAAiB,gBACpEe,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,OACdD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAc/B,QAAQ,gBAE1B8B,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,IAAI,SAASC,QAAU,kBAAMhB,EAAKR,gBAAiB,YAChEe,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACY,GAAAb,EAAD,OACdD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAc/B,QAAQ,YAE1B8B,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,IAAI,UAAUC,QAAU,kBAAMhB,EAAKR,gBAAiB,aACjEe,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACa,GAAAd,EAAD,OACdD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAc/B,QAAQ,eAMtC,OACI8B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAQgB,SAAS,SACjBjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,KACID,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACImB,YAAW,cACXC,gBAAc,OACdZ,QAAS,kBAAMhB,EAAKf,cAAa,KAEjCsB,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,OAEJD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,KAAKC,MAAM,WAA/B,eACkB3B,KAItBE,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAQ0B,GAAG,cAAchD,KAAMH,EAAYoD,QAAS,kBAAMnC,EAAKf,cAAa,KACxEsB,EAAAC,EAAAC,cAAA,OACI2B,SAAU,EACVC,KAAK,UAEJ/B,YA5EJgC,IAAMC,WAwFZC,wBA9FA,CACX7B,KAAM,CACF8B,MAAO,MA4FAD,CAAmB3D,qeC1GlC,IAoCM6D,iKACO,IACGxC,EAAYD,KAAKE,MAAjBD,QAER,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQyC,QACpBpC,EAAAC,EAAAC,cAACmC,GAAApC,EAAD,CAAME,UAAWR,EAAQ2C,OAEzBtC,EAAAC,EAAAC,cAAA,OACIC,UAAWR,EAAQ4C,SAGnBvC,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACsC,EAAA,KAAD,CACIC,GAAG,UACHpD,KAAK,EACLC,QAAQ,EACRC,QAAS,IACTC,SAAU,KAEVQ,EAAAC,EAAAC,cAACwC,GAAAzC,EAAD,CACIuB,QAAQ,YACRC,MAAM,YACNtB,UAAWR,EAAQY,QAHvB,sBArBAwB,IAAMC,WAuCfC,wBA3EA,SAAAU,GAAK,MAAK,CACrBpC,OAAQ,CACJ2B,MAAO,SAEXI,KAAM,CACFM,OAAQ,QACRV,MAAO,QACPW,QAAS,OAETC,eAAgB,SAChBC,WAAY,SAEZC,gBAAiB,sBACjBC,mBAAoB,gBACpBC,iBAAkB,YAClBC,eAAgB,QAChBC,qBAAsB,SAE1Bb,QAAS,CACLtB,SAAU,WACVoC,gBAAiB,qBACjBC,OAAQ,YAAc1F,EACtB2F,aAAc,OACd9B,MAAO7D,EACP4F,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXC,OAAQ,EACRC,QAAS,sBACTC,UAAW,UAEfzB,OAAQ,CACJoB,IAAK,UA2CEvB,CAAmBE,wBChDnB2B,GAjCA,CACXC,SAAU,CACNC,SAAU,KACVC,OAAQ,OACRC,SAAU,GAEdC,UAAW,CACPjC,MAAO,OACPkC,WAAY,OACZC,YAAa,QAEjBC,MAAO,CACHC,SAAU,IAEdC,QAAS,CACLD,SAAU,IAEdE,kBAAmB,CACf5B,QAAS,OACTE,WAAY,SACZtB,MAAO7D,GAEX8G,aAAc,CACVjD,MAAO7D,EACP+G,UAAW,CACPlD,MAAOlE,IAGfqH,cAAe,CACZf,UAAW,wcCtBZgB,4CAKF,SAAAA,EAAYjF,GAAO,IAAAhB,EAAA,OAAAkG,OAAAC,EAAA,EAAAD,CAAApF,KAAAmF,IACfjG,EAAAoG,EAAAC,KAAAvF,KAAME,IALVrB,MAAQ,CACJ2G,QAAQ,GAGOtG,uDAKf,IAAMe,EAAUD,KAAKE,MAAMD,QAC3B,OACQK,EAAAC,EAAAC,cAACsC,EAAA,QAAD,CAAS2C,KAAK,WACNnF,EAAAC,EAAAC,cAACmC,GAAApC,EAAD,CAAME,UAAWR,EAAQwE,WACrBnE,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACID,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,KAAKrB,UAAWR,EAAQ2E,MAAO7C,MAAM,gBAAgB4D,cAAY,GAArF,YAGArF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQ6E,QAAS/C,MAAM,eAA5D,ueAlBRM,IAAMC,WAgCfC,wBAAW6B,GAAX7B,CAAmB4C,wICzC5BU,GAAQ,6gBA2ECC,GAzEY,CACvB,CACI7D,GAAI,EACJ2C,MAAO,eACPmB,YAAa,yLACbC,MAAO,UACPC,SAAU,CAAC,YAAa,SAAU,eAAgB,MAAO,aAAc,UAAW,aAAc,QAAS,WAE7G,CACIhE,GAAI,EACJ2C,MAAO,kBACPmB,YAAa,0RACbC,MAAO,cACPC,SAAU,CAAE,YAAa,WAAY,QAAS,OAAQ,MAAO,IAAK,QAAS,SAAU,SAEzF,CACIhE,GAAI,EACJ2C,MAAO,sBACPmB,YAAa,gVACbC,MAAO,aACPC,SAAU,CAAE,SAAU,SAAU,OAAQ,SAAU,MAAO,KAAM,aAAc,QAAS,MAAO,OAAQ,WAAY,aAErH,CACIhE,GAAI,EACJ2C,MAAO,YACPmB,YAAaF,GACbG,MAAO,cACPC,SAAU,IAEd,CACIhE,GAAI,EACJ2C,MAAO,mBACPmB,YAAaF,GACbG,MAAO,cACPC,SAAU,IAEd,CACIhE,GAAI,EACJ2C,MAAO,UACPmB,YAAaF,GACbG,MAAO,cACPC,SAAU,IAEd,CACIhE,GAAI,EACJ2C,MAAO,SACPmB,YAAaF,GACbG,MAAO,cACPC,SAAU,IAEd,CACIhE,GAAI,EACJ2C,MAAO,eACPmB,YAAaF,GACbG,MAAO,cACPC,SAAU,IAEd,CACIhE,GAAI,EACJ2C,MAAO,aACPmB,YAAaF,GACbG,MAAO,cACPC,SAAU,IAEd,CACIhE,GAAI,EACJ2C,MAAO,kBACPmB,YAAaF,GACbG,MAAO,cACPC,SAAU,6fCjDlB,IAAMC,GAAY,SAAAjD,GAAK,MAAK,CACxBkD,SAAU,CACN3D,MAAO,IACPU,OAAQ,KAEZkD,UAAW,CACPlD,OAAQ,KAEZmD,WAAY,CACRnD,OAAQ,QAEZoD,WAAY,CACR/E,SAAU,WACVuC,IAAKb,EAAMsD,QAAQC,KACnBhE,MAAOS,EAAM5E,WAAWoI,SAAS5B,SACjC3B,OAAQD,EAAM5E,WAAWoI,SAAS5B,UAEtC6B,aAAc,CACVlC,SAAU,GAEdmC,OAAQ,CACJnE,MAAO,QAEXoE,YAAa,CACTC,eAAgB,CACZ9E,MAAOkB,EAAM1E,QAAQG,UAAUoI,QAGvCC,iBAAkB,CACdC,+BAAgC,CAC5BC,YAAahE,EAAM1E,QAAQG,UAAUoI,QAG7CI,WAAY,GACZC,eAAgB,KAgBpB,IAAMC,GAAO7E,qBAAW2D,GAAX3D,CAbb,SAAoBrC,GAAO,IAChBD,EAAWC,EAAXD,QACP,OACIK,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACC,QAAU,UACtBjH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACID,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYoF,cAAY,EAAC7D,QAAQ,KAAKC,MAAM,WACxCzB,EAAAC,EAAAC,cAACgH,GAAAjH,EAAD,CAAUE,UAAWR,EAAQqG,aADjC,gBAUVmB,4CAOF,SAAAA,EAAavH,GAAQ,IAAAhB,EAAA,OAAAkG,OAAAC,EAAA,EAAAD,CAAApF,KAAAyH,IACjBvI,EAAAoG,EAAAC,KAAAvF,KAAME,IAPVrB,MAAQ,CACJ+F,MAAO,GACPmB,YAAa,GACbC,MAAO,IAKP9G,EAAKL,MAAQ,CACT+F,MAAO1E,EAAM0E,MACbmB,YAAa7F,EAAM6F,YACnBC,MAAO9F,EAAM8F,MACb0B,WAAW,GAEfxI,EAAKyI,YAAczI,EAAKyI,YAAYC,KAAjBxC,OAAAyC,GAAA,EAAAzC,CAAAlG,IARFA,0DAWR4I,GACTA,EAAEC,iBACF,IAAMC,EAAYhI,KAAKnB,MAAM6I,UAC7B1H,KAAKb,SAAU,CACXuI,WAAYM,qCAKhB,IAAM/H,EAAUD,KAAKE,MAAMD,QACrBgI,EAAOjI,KAAKnB,MAAMkH,YACxB,OACIzF,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAemH,UAAW1H,KAAKnB,MAAM6I,WACrCpH,EAAAC,EAAAC,cAACmC,GAAApC,EAAD,CAAMO,IAAI,QAAQL,UAAWR,EAAQkG,UACjC7F,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAgBQ,QAASf,KAAK2H,YAAalH,UAAWR,EAAQoG,YAC1D/F,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACIE,UAAWR,EAAQmG,UACnBJ,MAAOhG,KAAKnB,MAAMmH,MAClBpB,MAAO5E,KAAKnB,MAAM+F,QAEtBtE,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACID,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYoF,cAAY,EAAC7D,QAAQ,KAAK8D,UAAU,MAC3C5F,KAAKnB,MAAM+F,OAEhBtE,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,KACjBqC,EAAKI,UAAU,EAAG,KAAO,QAGlC/H,EAAAC,EAAAC,cAAC4G,GAAD,QAIR9G,EAAAC,EAAAC,cAACmC,GAAApC,EAAD,CAAMO,IAAI,OAAOL,UAAWR,EAAQkG,UAChC7F,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAgBQ,QAASf,KAAK2H,YAAalH,UAAWR,EAAQoG,YAC1D/F,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACID,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYoF,cAAY,EAAC7D,QAAQ,KAAK8D,UAAU,MAC3C5F,KAAKnB,MAAM+F,OAEhBtE,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,KACjBqC,IAGT3H,EAAAC,EAAAC,cAAC4G,GAAD,gBA5DS/E,IAAMC,WAoE7BgG,GAAiB/F,qBAAW2D,GAAX3D,CAAsBkF,IAEvCc,4CAKF,SAAAA,EAAarI,GAAQ,IAAAH,EAAA,OAAAqF,OAAAC,EAAA,EAAAD,CAAApF,KAAAuI,IACjBxI,EAAAyI,EAAAjD,KAAAvF,KAAME,IALVrB,MAAQ,CACJ4J,gBAAiB,IAKjB1I,EAAKlB,MAAQ,CACT4J,gBAAiBvI,EAAMwI,UAHV3I,wEAOK4I,GACpB3I,KAAKb,SAAS,CAAEsJ,gBAAiBE,EAAUD,4CAI7C,OACIpI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqI,SAAA,KACM5I,KAAKnB,MAAM4J,gBAAgBI,IAAK,SAAAjG,GAAI,OAClCtC,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMO,IAAK8B,EAAKX,GAAI6G,MAAI,GACpBxI,EAAAC,EAAAC,cAAC8H,GAAD,CACI1D,MAAOhC,EAAKgC,MACZmB,YAAanD,EAAKmD,YAClBC,MAAOpD,EAAKoD,mBAxBX3D,IAAMC,WAiC7ByG,GAAcxG,qBAAW2D,GAAX3D,CAAsBgG,IAEpCS,4CACF,SAAAA,EAAa9I,GAAQ,IAAA+I,EAAA,OAAA7D,OAAAC,EAAA,EAAAD,CAAApF,KAAAgJ,IACjBC,EAAAC,EAAA3D,KAAAvF,KAAOE,IACFrB,MAAQ,CACTS,GAAI2J,EAAK/I,MAAMZ,GACf6J,aAAc,IAElBF,EAAKG,aAAeH,EAAKG,aAAaxB,KAAlBxC,OAAAyC,GAAA,EAAAzC,CAAA6D,IANHA,2DASPnB,GACV9H,KAAKb,SAAS,CACVgK,aAAcrB,EAAEuB,OAAOC,OACxBtJ,KAAKnB,MAAMS,GAAIwI,EAAEuB,OAAOC,yCAGtB,IAAAC,EAAAvJ,KACCC,EAAUD,KAAKE,MAAMD,QAC3B,OACIK,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CACI0B,GAAG,SACHwH,MAAM,oBACNH,MAAOtJ,KAAKnB,MAAMsK,aAClB5E,OAAO,SACPzC,QAAQ,WACRrB,UAAWR,EAAQ0G,OACnB+C,SAAU,SAAAC,GAAG,OAAIJ,EAAKH,aAAaO,IACnCC,gBAAiB,CACb3J,QAAS,CACL4J,KAAM5J,EAAQ2G,YACdkD,QAAS7J,EAAQiH,aAGzB6C,WAAY,CACRC,eACI1J,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CAAgBgB,SAAS,SACrBjB,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,OAGRN,QAAS,CACL4J,KAAM5J,EAAQ8G,iBACd+C,QAAS7J,EAAQiH,WACjBC,eAAgBlH,EAAQkH,0BA1CxB9E,IAAMC,WAkDxB6H,GAAS5H,qBAAW2D,GAAX3D,CAAsByG,IAE/BoB,4CACF,SAAAA,EAAYlK,GAAO,IAAAmK,EAAAjF,OAAAC,EAAA,EAAAD,CAAApF,KAAAoK,IACfC,EAAAC,EAAA/E,KAAAvF,KAAME,IAsBVX,gBAAkB,SAAAC,GACd6K,EAAKlL,SAAS,CACVL,YAAY,GACbW,WAASC,SAAUF,EAAI,CACtBG,KAAK,EACLC,QAAQ,EACRC,QAAS,IACTC,SAAU,QA9BCuK,EAkCnBE,aAAe,SAACC,GACZ,IAAIC,EAAWJ,EAAKxL,MAAM6L,KAAK/D,OAAQ6D,GAC5B,KAAPA,EACAC,EAAW3E,GACG,KAAP0E,GAAaC,IAAa,KACjCE,QAAQC,IAAI,cACZH,EAAW3E,IAEfuE,EAAKlL,SAAS,CACVsJ,gBAAiBgC,KA3CN,OAgBfJ,EAAKxL,MAAQ,CACT4J,gBAAiB3C,GACjB4E,KAAM,IAAIG,KAAK/E,GAhBL,CACVgF,YAAY,EACZC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,iBAAkB,GAClBC,mBAAoB,EACpBC,KAAM,CACF,QACA,cACA,cAOJ5F,QAAQ,GAnBG6E,uDA+CV,IAAAgB,EAAArL,KACCC,EAAUD,KAAKE,MAAMD,QAC3B,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQyG,cACpBpG,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACf,QAAS,GAAIgB,QAAQ,UACjCjH,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+K,GAAI,GAAIxK,KAAM,EAAGgI,MAAI,GACvBxI,EAAAC,EAAAC,cAACsC,EAAA,QAAD,CAAS2C,KAAK,cACVnF,EAAAC,EAAAC,cAACmC,GAAApC,EAAD,CAAME,UAAWR,EAAQwE,WACrBnE,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACID,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACIuB,QAAQ,KACRrB,UAAWR,EAAQ2E,MACnB7C,MAAM,gBACN4D,cAAY,GAJhB,cAQArF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACIqF,UAAU,IACVnF,UAAWR,EAAQ6E,QACnB/C,MAAM,eAHV,kCAKmCzB,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CAAMQ,QAAU,kBAAMsK,EAAK9L,gBAAiB,aAA5C,cALnC,wBAOAe,EAAAC,EAAAC,cAACgL,GAAD,CAAQlM,GAAIU,KAAKuK,mBAKjCjK,EAAAC,EAAAC,cAACuI,GAAD,CAAaL,SAAU1I,KAAKnB,MAAM4J,gBAAiBjD,OAAQxF,KAAKnB,MAAM2G,kBA7EjEnD,IAAMC,WAwFhBC,wBAAW6B,GAAX7B,CAAmB6H,2eChT5BqB,4CACF,SAAAA,EAAYvL,GAAQ,OAAAkF,OAAAC,EAAA,EAAAD,CAAApF,KAAAyL,GAAAnG,EAAAC,KAAAvF,KACVE,wDAIN,IAAMD,EAAUD,KAAKE,MAAMD,QAC3B,OACIK,EAAAC,EAAAC,cAACsC,EAAA,QAAD,CAAS2C,KAAK,WACVnF,EAAAC,EAAAC,cAACmC,GAAApC,EAAD,CAAME,UAAWR,EAAQwE,WACrBnE,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACID,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACf,QAAS,IACrBjG,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,IACXhL,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,KAAKrB,UAAWR,EAAQ2E,MAAO7C,MAAM,gBAAgB4D,cAAY,GAArF,WAGArF,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQiF,eACxB5E,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQ6E,QAAS/C,MAAM,eAA5D,4DAKJzB,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,GACZhL,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQ6E,QAAS/C,MAAM,cAAc2J,MAAO,CAAEvH,UAAW,WAC1F7D,EAAAC,EAAAC,cAAA,QAAMC,WAAWR,EAAQ8E,kBAAmB9E,EAAQiF,gBAAe5E,EAAAC,EAAAC,cAACa,GAAAd,EAAD,MAAYD,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CAAME,UAAWR,EAAQ+E,aAAc2G,KAAK,6BAA5C,yBAGtFrL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,GACZhL,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQ6E,QAAS/C,MAAM,cAAc2J,MAAO,CAAEvH,UAAW,WAC1F7D,EAAAC,EAAAC,cAAA,QAAMC,WAAWR,EAAQ8E,kBAAmB9E,EAAQiF,gBAAe5E,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,MAAaD,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CAAME,UAAWR,EAAQ+E,aAAc2G,KAAK,oBAAoBE,UAAQ,GAAxE,cAGvFvL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,GACZhL,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQ6E,QAAS/C,MAAM,cAAc2J,MAAO,CAAEvH,UAAW,WAC1F7D,EAAAC,EAAAC,cAAA,QAAMC,WAAWR,EAAQ8E,kBAAmB9E,EAAQiF,gBAAe5E,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,MAAnE,+BAlCT8B,IAAMC,WAiDjBC,wBAAW6B,GAAX7B,CAAmBkJ,gdCnDlC,IA8BMM,4CACH,SAAAA,EAAa7L,GAAQ,IAAAhB,EAAA,OAAAkG,OAAAC,EAAA,EAAAD,CAAApF,KAAA+L,IAClB7M,EAAAoG,EAAAC,KAAAvF,KAAOE,IACFrB,MAAQ,CACV2G,QAAQ,GAHOtG,uDAQlB,IAAMe,EAAUD,KAAKE,MAAMD,QAE3B,OACGK,EAAAC,EAAAC,cAACsC,EAAA,QAAD,CAAS2C,KAAK,UACXnF,EAAAC,EAAAC,cAACmC,GAAApC,EAAD,CAAME,UAAWR,EAAQ+L,UACtB1L,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACGE,UAAWR,EAAQgM,SACnBjG,MAAM,mBACNpB,MAAM,cAETtE,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQiM,MACxB5L,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAaE,UAAWR,EAAQ6E,SAC7BxE,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACf,QAAS,IACtBjG,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,IACZhL,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,KAAKrB,UAAWR,EAAQ2E,MAAO7C,MAAM,gBAAgB4D,cAAY,GAArF,WAIHrF,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,IACZhL,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQqH,WACrBhH,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQkM,YAAapK,MAAM,eAAhE,aAKNzB,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,GACZhL,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQqH,WACrBhH,EAAAC,EAAAC,cAACwC,GAAAzC,EAAD,CACGuB,QAAQ,YACRC,MAAM,UACN4J,KAAK,uBAHR,UASNrL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,GACZhL,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQqH,WACrBhH,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQkM,YAAapK,MAAM,eAAhE,QAKNzB,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,GACZhL,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQqH,WACrBhH,EAAAC,EAAAC,cAACwC,GAAAzC,EAAD,CAAQuB,QAAQ,YAAYC,MAAM,UAAU4J,KAAK,sBAAsBE,UAAQ,GAA/E,cAKNvL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,IACZhL,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQqH,WACrBhH,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYqF,UAAU,IAAInF,UAAWR,EAAQkM,YAAapK,MAAM,eAAhE,kCAGAzB,EAAAC,EAAAC,cAACwC,GAAAzC,EAAD,CAAQuB,QAAQ,YAAYC,MAAM,YAAY4J,KAAK,sBAAnD,4BAhEFtJ,IAAMC,WA8E/ByJ,GAAWK,SAAW,CACnBnM,QAASoM,KAAUC,OAAOC,YAGdhK,4BAhHA,SAAAU,GAAK,MAAK,CACtB+I,SAAS,CACN7I,QAAS,QAEZ8I,SAAU,CAEP1I,mBAAoB,MACpBf,MAAO,KAEV0J,KAAM,CACH/I,QAAS,OACTqJ,cAAe,UAElB1H,QAAS,CACN2H,KAAM,YAETnF,UAAW,CACRnD,UAAW,UAEdgI,YAAa,CACVtH,SAAU,IAEbD,MAAO,CACJC,SAAU,IAEXhE,OAAQ,CACT0D,OAAQ,MAsFGhC,CAAmBwJ,IC1EnBxJ,4BAAW6B,GAAX7B,CApCf,SAAarC,GAAO,IACRD,EAAYC,EAAZD,QACR,OACIK,EAAAC,EAAAC,cAACkM,EAAAnM,EAAD,CAAkB0C,MAAOA,GACzB3C,EAAAC,EAAAC,cAACmM,EAAApM,EAAD,MAEAD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoM,GAAD,MACAtM,EAAAC,EAAAC,cAACqM,GAAD,MACAvM,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAAC7G,UAAWR,EAAQoE,SAAUkC,QAAS,IAClDjG,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAACwC,GAAI,IACXhL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACC,QAAQ,SAAShB,QAAS,IACtCjG,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAAChI,IAAI,WACXR,EAAAC,EAAAC,cAACsM,GAAD,OAEJxM,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAAChI,IAAI,cACXR,EAAAC,EAAAC,cAACuM,GAAD,OAEJzM,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAAChI,IAAI,UACXR,EAAAC,EAAAC,cAACwM,GAAD,OAEJ1M,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAMuI,MAAI,EAAChI,IAAI,WACXR,EAAAC,EAAAC,cAACyM,GAAD,cCzBRC,QACW,cAA7BC,OAAOnC,SAASoC,UAEe,UAA7BD,OAAOnC,SAASoC,UAEhBD,OAAOnC,SAASoC,SAASC,MACvB,2DCbNC,IAASC,OAAOjN,EAAAC,EAAAC,cAACgN,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c798d151.chunk.js","sourcesContent":["import gpink from '@material-ui/core/colors/pink';\nimport gblue from '@material-ui/core/colors/blue';\nimport ggrey from '@material-ui/core/colors/grey';\n\nexport const pink = gpink.A400;\nexport const blue = gblue[700];\nexport const white = ggrey[100];\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { pink, blue } from './pallet';\n\nexport default createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        primary: {\n            main: blue\n        },\n        secondary: {\n            main: pink\n        },\n        type: 'dark'\n    }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { scroller } from 'react-scroll';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport WorkIcon from '@material-ui/icons/Work';\nimport NoteIcon from '@material-ui/icons/Note';\nimport EmailIcon from '@material-ui/icons/Email';\n\nconst styles = {\n    list: {\n        width: 250,\n    },\n};\n\nclass NavBar extends React.Component {\n    state = {\n        drawerOpen: false,\n        section: \"Home\",\n    };\n\n    toggleDrawer = open => {\n        this.setState({\n            drawerOpen: open\n        });\n    };\n\n    setSection = (val, cb) => {\n        this.setState({ section: val }, cb);\n    };\n\n    scrollToElement = el => {\n        this.setState({\n            drawerOpen: false\n        }, scroller.scrollTo( el, {\n            spy: true,\n            smooth: true,\n            offset: -100,\n            duration: 500,\n        }));\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { drawerOpen, section } = this.state;\n        var sectionHdr = (section === \"Home\")? \"\" : \": \" + section;\n\n        const sideBar = (\n            <div className={classes.list}>\n                <List>\n                    <ListItem button key=\"About\" onClick={ () => this.scrollToElement( \"AboutMe\" ) }>\n                        <ListItemIcon><AccountIcon/></ListItemIcon>\n                        <ListItemText primary=\"About Me\" />\n                    </ListItem>\n                    <ListItem button key=\"Experience\" onClick={ () => this.scrollToElement( \"Experience\" ) }>\n                        <ListItemIcon><WorkIcon/></ListItemIcon>\n                        <ListItemText primary=\"Experience\" />\n                    </ListItem>\n                    <ListItem button key=\"Resume\" onClick={ () => this.scrollToElement( \"Resume\" ) }>\n                        <ListItemIcon><NoteIcon/></ListItemIcon>\n                        <ListItemText primary=\"Resume\" />\n                    </ListItem>\n                    <ListItem button key=\"Contact\" onClick={ () => this.scrollToElement( \"Contact\" ) }>\n                        <ListItemIcon><EmailIcon/></ListItemIcon>\n                        <ListItemText primary=\"Contact\" />\n                    </ListItem>\n                </List>\n            </div>\n        );\n\n        return (\n            <div>\n                <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton\n                        aria-owns={'side-drawer'}\n                        aria-haspopup=\"true\"\n                        onClick={() => this.toggleDrawer(true)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        jhassler.dev{ sectionHdr }\n                    </Typography>\n                </Toolbar>\n                </AppBar>\n                <Drawer id='side-drawer' open={drawerOpen} onClose={() => this.toggleDrawer(false)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                    >\n                        {sideBar}\n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-scroll';\nimport { white } from './pallet';\n\nconst styles = theme => ({\n    button: {\n        width: '200px',\n    },\n    card: {\n        height: '100vh',\n        width: '100vw',\n        display: 'flex',\n\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        backgroundImage: 'url(\"./header.jpg\")',\n        backgroundPosition: 'center center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed',\n    },\n    overlay: {\n        position: 'absolute',\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\n        border: '2px solid' + white,\n        borderRadius: '25px',\n        color: white,\n        top: '20%',\n        left: '50%',\n        transform: 'translate(-50%, 50%)',\n        zIndex: 2,\n        padding: '10px 40px 40px 40px',\n        textAlign: 'center',\n    },\n    spacer: {\n        top: '100%',\n    },\n});\n\nclass IndexCard extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.spacer}>\n                <Card className={classes.card}>\n                </Card>\n                <div\n                    className={classes.overlay}\n                >\n\n                    <h2>Software Engineer</h2>\n                    <h1>Joshua Hassler</h1>\n                    <Link\n                        to=\"AboutMe\"\n                        spy={true}\n                        smooth={true}\n                        offset={-100}\n                        duration={500}\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.button}\n                        >\n                            About Me\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nIndexCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IndexCard);\n\n","import { white, pink, blue } from './pallet';\n\nconst styles = {\n    rootGrid: {\n        maxWidth: 1100,\n        margin: 'auto',\n        flexGrow: 1,\n    },\n    titleCard: {\n        width: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    title: {\n        fontSize: 20,\n    },\n    content: {\n        fontSize: 25,\n    },\n    alignTextWithIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        color: white,\n    },\n    contactLinks: {\n        color: white,\n        '&:hover': {\n            color: pink,\n        }\n    },\n    textContainer: {\n       textAlign: 'center',\n    },\n};\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Element } from 'react-scroll';\nimport styles from './BaseStyle';\n\nclass AboutCard extends React.Component {\n    state = {\n        inview: false,\n    };\n\n    constructor(props) {\n        super(props)\n    };\n\n    render() {\n        const classes = this.props.classes;\n        return (\n                <Element name=\"AboutMe\" >\n                        <Card className={classes.titleCard}>\n                            <CardContent>\n                                <Typography variant=\"h3\" className={classes.title} color=\"textSecondary\" gutterBottom>\n                                    About Me\n                                </Typography>\n                                <Typography component=\"p\" className={classes.content} color=\"textPrimary\">\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempor erat nec mi dignissim pulvinar. Nullam porta risus quis elit fermentum imperdiet. Etiam nec pretium justo, eu bibendum arcu. Phasellus eleifend diam sed risus dictum blandit. Cras nec eros faucibus, finibus elit vitae, rhoncus augue. Donec aliquet pulvinar tellus, eu ullamcorper augue ultrices ut. Mauris at tortor sed orci egestas maximus sit amet vel lectus. Nulla convallis sit amet nisi sed interdum.\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                </Element>\n        );\n    };\n}\n\nAboutCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AboutCard);\n\n","const lorum = \" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur rutrum sem a sapien consequat varius. Cras vitae placerat diam, a posuere tellus. Donec varius, nulla ac rhoncus ultrices, erat ex aliquet velit, pulvinar imperdiet felis magna sed diam. Nulla at posuere neque. Donec aliquam ligula quis mauris mattis tempor. Cras rutrum justo sit amet nibh commodo, vitae blandit sem commodo. Mauris sit amet mauris sem. Quisque nisl tortor, congue in blandit vitae, cursus ut felis. Donec quis pulvinar lorem, ut varius\";\n\nconst ExperienceListings = [\n    {\n        id: 0,\n        title: \"UMass Lowell\",\n        description: \"Student. Achieved Bachelor of Science in Computer Science. Studied a wide variety of topics with extra focus on compilers, language design,operating systems, and distributed systems.\",\n        image: \"uml.png\",\n        keywords: [\"education\", \"school\", \"umass lowell\", \"uml\", \"university\", \"college\", \"university\", \"umass\", \"degree\"],\n    },\n    {\n        id: 1,\n        title: \"Arista Networks\",\n        description: \"Software Engineer. Works as a compiler engineer to improve language usability. Optimized compiler parsing to reduice build times. Designed and implemented caching solutions powered by Redis increasing cache hit rate from 20% to 80%.  Worked with c, c++, python, redis, and boost.\",\n        image: \"testimg.jpg\",\n        keywords: [ \"compilers\", \"language\", \"redis\", \"anet\", \"c++\", \"c\", \"boost\", \"python\", \"work\" ],\n    },\n    {\n        id: 2,\n        title: \"Akamai Technologies\",\n        description: \"Technical Intern. Implemented tooling to increase team efficiency. Created automated resource requisitioning tool to help team respond to dynamic network demands. Developed skills in project management to achieve goals. Worked with and designed structures for large SQL databases. Worked with perl, python, PHP, javascript, SQL, BASH\",\n        image: \"akamai.png\",\n        keywords: [ \"akamai\", \"intern\", \"perl\", \"python\", \"PHP\", \"js\", \"javascript\", \"tools\", \"cdn\", \"work\", \"software\", \"engineer\" ],\n    },\n    {\n        id: 3,\n        title: \"91.5 WUML\",\n        description: lorum,\n        image: \"testimg.jpg\",\n        keywords: [],\n    },\n    {\n        id: 4,\n        title: \"UMass Lowell ACM\",\n        description: lorum,\n        image: \"testimg.jpg\",\n        keywords: [],\n    },\n    {\n        id: 5,\n        title: \"Demolay\",\n        description: lorum,\n        image: \"testimg.jpg\",\n        keywords: [],\n    },\n    {\n        id: 6,\n        title: \"Skiing\",\n        description: lorum,\n        image: \"testimg.jpg\",\n        keywords: [],\n    },\n    {\n        id: 7,\n        title: \"Vidjio Germs\",\n        description: lorum,\n        image: \"testimg.jpg\",\n        keywords: [],\n    },\n    {\n        id: 8,\n        title: \"SPACE HAUC\",\n        description: lorum,\n        image: \"testimg.jpg\",\n        keywords: [],\n    },\n    {\n        id: 8,\n        title: \"Home Networking\",\n        description: lorum,\n        image: \"testimg.jpg\",\n        keywords: [],\n    },\n];\n\nexport default ExperienceListings;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport { scroller } from 'react-scroll';\nimport { Element } from 'react-scroll';\nimport ReactCardFlip from 'react-card-flip';\nimport styles from './BaseStyle';\nimport ExperienceListings from './ExperienceListings';\nimport Fuse from 'fuse.js';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport FlipIcon from '@material-ui/icons/Cached';\n\nconst itemStyle = theme => ({\n    cardBody: {\n        width: 350,\n        height: 400,\n    },\n    cardMedia: {\n        height: 140,\n    },\n    cardAction: {\n        height: '100%',\n    },\n    cardButton: {\n        position: \"relative\",\n        top: theme.spacing.unit,\n        width: theme.typography.display1.fontSize,\n        height: theme.typography.display1.fontSize,\n    },\n    expContainer: {\n        flexGrow: 1,\n    },\n    search: {\n        width: '100%',\n    },\n    searchInput: {\n        '&$cssFocused': {\n            color: theme.palette.secondary.light,\n        },\n    },\n    cssOutlinedInput: {\n        '&$cssFocused $notchedOutline': {\n            borderColor: theme.palette.secondary.light,\n         },\n    },\n    cssFocused: {},\n    notchedOutline: {},\n});\n\nfunction FlipButton(props) {\n    const {classes} = props;\n    return (\n        <Grid container justify = \"center\">\n            <CardContent>\n                <Typography gutterBottom variant=\"h6\" color=\"primary\">\n                    <FlipIcon className={classes.cardButton} />See More\n                </Typography>\n            </CardContent>\n        </Grid>\n    );\n}\n\nconst Flip = withStyles(itemStyle)(FlipButton);\n\nclass ExperienceItem extends React.Component {\n    state = {\n        title: \"\",\n        description: \"\",\n        image: \"\",\n    };\n    \n    constructor( props ) {\n        super(props);\n        this.state = {\n            title: props.title,\n            description: props.description,\n            image: props.image,\n            isFlipped: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n    };\n\n    handleClick( e ) {\n        e.preventDefault();\n        const currState = this.state.isFlipped;\n        this.setState( {\n            isFlipped: !currState\n        } );\n    }\n\n    render() {\n        const classes = this.props.classes;\n        const desc = this.state.description;\n        return (\n            <ReactCardFlip isFlipped={this.state.isFlipped}>\n            <Card key=\"front\" className={classes.cardBody}>\n                <CardActionArea onClick={this.handleClick} className={classes.cardAction}>\n                    <CardMedia\n                        className={classes.cardMedia}\n                        image={this.state.image}\n                        title={this.state.title}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {this.state.title}\n                        </Typography>\n                        <Typography component=\"p\">\n                            {desc.substring(0, 230) + \"...\"}\n                        </Typography>\n                    </CardContent>\n                    <Flip />\n                </CardActionArea>\n            </Card>\n\n            <Card key=\"back\" className={classes.cardBody}>\n                <CardActionArea onClick={this.handleClick} className={classes.cardAction}>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {this.state.title}\n                        </Typography>\n                        <Typography component=\"p\">\n                            {desc}\n                        </Typography>\n                    </CardContent>\n                    <Flip /> \n                </CardActionArea>\n            </Card>\n            </ReactCardFlip>\n        );\n    };\n}\n\nconst ExperienceCard = withStyles(itemStyle)(ExperienceItem);\n\nclass ExperienceList extends React.Component {\n    state = {\n        experienceCards: [],\n    };\n\n    constructor( props ) {\n        super(props);\n        this.state = {\n            experienceCards: props.expCards,\n        };\n    };\n\n    componentWillReceiveProps(nextProps) {\n          this.setState({ experienceCards: nextProps.expCards });  \n    }\n\n    render() {\n        return (\n            <>\n                { this.state.experienceCards.map( card => (\n                    <Grid key={card.id} item>\n                        <ExperienceCard\n                            title={card.title}\n                            description={card.description}\n                            image={card.image}\n                        />\n                    </Grid>\n                ) ) }\n            </>\n        );\n    }\n}\n\nconst Experiences = withStyles(itemStyle)(ExperienceList);\n\nclass SearchBar extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.state = {\n            cb: this.props.cb,\n            searchString: \"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n    };\n\n    handleChange( e ) {\n        this.setState({\n            searchString: e.target.value\n        }, this.state.cb( e.target.value ) );\n    }\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <TextField\n                id=\"search\"\n                label=\"Search Experience\"\n                value={this.state.searchString}\n                margin=\"normal\"\n                variant=\"outlined\"\n                className={classes.search}\n                onChange={evt => this.handleChange(evt)}\n                InputLabelProps={{\n                    classes: {\n                        root: classes.searchInput,\n                        focused: classes.cssFocused,\n                    },\n                }}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <SearchIcon />\n                        </InputAdornment>\n                    ),\n                    classes: {\n                        root: classes.cssOutlinedInput,\n                        focused: classes.cssFocused,\n                        notchedOutline: classes.notchedOutline,\n                    },\n                }}\n            />\n        );\n    }\n}\n\nconst Search = withStyles(itemStyle)(SearchBar);\n\nclass Experience extends React.Component {\n    constructor(props) {\n        super(props);\n        var options = {\n            shouldSort: true,\n            threshold: 0.2,\n            location: 0,\n            distance: 100,\n            maxPatternLength: 32,\n            minMatchCharLength: 1,\n            keys: [\n                \"title\",\n                \"description\",\n                \"keywords\",\n            ]\n        };\n\n        this.state = {\n            experienceCards: ExperienceListings,\n            fuse: new Fuse(ExperienceListings, options),\n            inview: false,\n        };\n    }\n\n    scrollToElement = el => {\n        this.setState({\n            drawerOpen: false\n        }, scroller.scrollTo( el, {\n            spy: true,\n            smooth: true,\n            offset: -100,\n            duration: 500,\n        }));\n    }\n\n    handleSearch = (ss) => {\n        var newCards = this.state.fuse.search( ss );\n        if( ss === \"\" ) {\n            newCards = ExperienceListings;\n        } else if( ss !== \"\" && newCards === {} ) {\n            console.log(\"No Results\")\n            newCards = ExperienceListings;\n        }\n        this.setState({\n            experienceCards: newCards,\n        });\n    }\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <div className={classes.expContainer}>\n                <Grid container spacing={16} justify=\"center\">\n                    <Grid xs={12} key={-1} item>\n                        <Element name=\"Experience\" >\n                            <Card className={classes.titleCard}>\n                                <CardContent>\n                                    <Typography\n                                        variant=\"h3\"\n                                        className={classes.title}\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                    >\n                                        Experience\n                                    </Typography>\n                                    <Typography\n                                        component=\"p\"\n                                        className={classes.content}\n                                        color=\"textPrimary\"\n                                    >\n                                        Search around my experience or <Link onClick={ () => this.scrollToElement( \"Contact\" ) }>contact me</Link> with any questions.\n                                    </Typography>\n                                    <Search cb={this.handleSearch} />\n                                </CardContent>\n                            </Card>\n                        </Element>\n                    </Grid>\n                    <Experiences expCards={this.state.experienceCards} inview={this.state.inview} />\n                </Grid>\n            </div>\n        );\n    }\n}\n\nExperience.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Experience);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { Element } from 'react-scroll';\nimport styles from './BaseStyle';\n\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nclass ContactCard extends React.Component {\n    constructor(props) {\n        super(props)\n    };\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <Element name=\"Contact\" >\n                <Card className={classes.titleCard}>\n                    <CardContent>\n                        <Grid container spacing={16}>\n                            <Grid item xs={12}>\n                                <Typography variant=\"h3\" className={classes.title} color=\"textSecondary\" gutterBottom>\n                                    Contact\n                                </Typography>\n                                <div className={classes.textContainer} >\n                                <Typography component=\"p\" className={classes.content} color=\"textPrimary\">\n                                    Feel free to contact me! I am most reachable by email.\n                                </Typography>\n                                </div>\n                            </Grid>\n                            <Grid item xs={6}>\n                               <Typography component=\"p\" className={classes.content} color=\"textPrimary\" style={{ textAlign: 'center' }}>\n                                   <span className={classes.alignTextWithIcon, classes.textContainer}><EmailIcon/><Link className={classes.contactLinks} href=\"mailto:joshua@hassler.dev\">joshua@hassler.dev</Link></span>\n                               </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                               <Typography component=\"p\" className={classes.content} color=\"textPrimary\" style={{ textAlign: 'center' }}>\n                                   <span className={classes.alignTextWithIcon, classes.textContainer}><VpnKeyIcon/><Link className={classes.contactLinks} href=\"/jhassler_pgp.asc\" download>PGP Key</Link></span>\n                               </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                               <Typography component=\"p\" className={classes.content} color=\"textPrimary\" style={{ textAlign: 'center' }}>\n                                   <span className={classes.alignTextWithIcon, classes.textContainer}><PhoneIcon/>(774) 313 7029</span>\n                               </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Element>\n        );\n    }\n}\n\nContactCard.propTypes = {\n   classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ContactCard);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { Element } from 'react-scroll';\n\nconst styles = theme => ({\n   cardRoot:{\n      display: 'flex',\n   },\n   resImage: { \n        //backgroundAttachment: 'fixed',\n      backgroundPosition: 'top',\n      width: 300,\n   },\n   info: {\n      display: 'flex',\n      flexDirection: 'column',\n   },\n   content: {\n      flex: '1 0 auto',\n   },\n   container: {\n      textAlign: 'center',\n   },\n   textContent: {\n      fontSize: 25,\n   },\n   title: {\n      fontSize: 20,\n   },\n     button: {\n    margin: 10,\n  },\n});\n\nclass ResumeCard extends React.Component {\n   constructor( props ) {\n      super( props );\n      this.state = {\n         inview: false,\n      }\n   };\n\n   render() {\n      const classes = this.props.classes;\n\n      return(\n         <Element name=\"Resume\" >\n            <Card className={classes.cardRoot}>\n               <CardMedia\n                  className={classes.resImage}\n                  image=\"Resume2020-1.png\"\n                  title=\"My Resume\"\n               />\n               <div className={classes.info}>\n               <CardContent className={classes.content}>\n                  <Grid container spacing={16}>\n                     <Grid item xs={12}>\n                        <Typography variant=\"h3\" className={classes.title} color=\"textSecondary\" gutterBottom>\n                           Resume\n                        </Typography>\n                     </Grid>\n                     <Grid item xs={12}>\n                        <div className={classes.container}>\n                           <Typography component=\"p\" className={classes.textContent} color=\"textPrimary\">\n                              You can\n                           </Typography>\n                        </div>\n                     </Grid>\n                     <Grid item xs={4}>\n                        <div className={classes.container}>\n                           <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              href=\"jhassler-resume.pdf\"\n                           >\n                              View\n                           </Button>\n                        </div>\n                     </Grid>\n                     <Grid item xs={4}>\n                        <div className={classes.container}>\n                           <Typography component=\"p\" className={classes.textContent} color=\"textPrimary\">\n                              or\n                           </Typography>\n                        </div>\n                     </Grid>\n                     <Grid item xs={4}>\n                        <div className={classes.container}>\n                           <Button variant=\"contained\" color=\"primary\" href=\"jhassler-resume.pdf\" download>\n                              Download\n                           </Button>\n                        </div>\n                     </Grid>\n                     <Grid item xs={12}>\n                        <div className={classes.container}>\n                           <Typography component=\"p\" className={classes.textContent} color=\"textPrimary\">\n                              my resume. Have any questions?\n                           </Typography>\n                           <Button variant=\"contained\" color=\"secondary\" href=\"#contained-buttons\">\n                              contact me\n                           </Button>\n                        </div>\n                     </Grid>\n                  </Grid>\n               </CardContent>\n               </div>\n            </Card>\n         </Element>\n      );\n   }\n}\n\nResumeCard.propType = {\n   classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ResumeCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport theme from './Theme';\nimport NavBar from './NavBar';\nimport HomeCard from './HomeCard';\nimport AboutCard from './AboutCard';\nimport Experience from './Experience';\nimport ContactCard from './ContactCard';\nimport ResumeCard from './Resume';\nimport styles from './BaseStyle';\n\nfunction App(props) {\n    const { classes } = props;\n    return (\n        <MuiThemeProvider theme={theme}>\n        <CssBaseline /> \n\n        <div className=\"App\">\n            <NavBar />\n            <HomeCard />\n            <Grid container className={classes.rootGrid} spacing={16}>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={16}>\n                        <Grid item key=\"AboutMe\">\n                            <AboutCard />\n                        </Grid>\n                        <Grid item key=\"Experience\">\n                            <Experience />\n                        </Grid>\n                        <Grid item key=\"Resume\">\n                            <ResumeCard />\n                        </Grid>\n                        <Grid item key=\"Contact\">\n                            <ContactCard />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n        </MuiThemeProvider>\n    );\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}